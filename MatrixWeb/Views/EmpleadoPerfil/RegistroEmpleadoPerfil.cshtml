@model RecursoHumano.EmpleadoPerfil
@{
    ViewBag.Title = "Registro EmpleadoPerfil";
    Layout = null;
}

@if (Model.mensaje.CodigoMensaje > 0)
{
    <span>ERROR</span>
    <span>@Model.mensaje.DescripcionMensaje</span>
    <button type="button" data-toggle="tooltip" class="btn btn-danger label" title="Regresar al formulario anterior" onclick="CerrarModalEmpleadoPerfil()"><i class="ti-back-left"></i></button>
}
else
{
    <div class="card card-block bg-info py-1 px-1 mb-1">
        <h6 class="card-title text-white m-1 center">@Model.empleado.persona.NombreCompleto</h6>
    </div>
    <form id="frmRegistroEmpleadoPerfil" name="frmRegistroEmpleadoPerfil" method="POST">
        <div class="row">
            <div class="col-12">
                <div class="card" style="box-shadow:none">
                    <div class="card-header"><h5 class="my-0">Registro de Funciones Administrativas del Empleado</h5></div>
                    <div class="card-body py-1 pb-3">
                        <input type="hidden" id="txtRegIdEmpleadoPerfil" name="txtRegIdEmpleadoPerfil" value="@Model.IdEmpleadoPerfil" />
                        <div class="row">

                            <div class="col-md-12">
                                <div class="mb-1">
                                    <div class="form-group">
                                        <label class="form-label" for="cmbEmpresaSede">Empresa/Sede</label>
                                        <select class="form-control" id="cmbEmpresaSede" name="cmbEmpresaSede" data-toggle="select2" data-width="100%" data-validation="[V>0]" data-validation-message="Seleccione EmpresaSede"></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="mb-1">
                                    <div class="form-group">
                                        <label class="form-label" for="txtArea">Area</label>
                                        <select class="form-control" id="cmbArea" name="cmbArea" data-toggle="select2" data-width="100%" data-validation="[V>0]" data-validation-message="Seleccione el Area"></select>

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="mb-1">
                                    <div class="form-group">
                                        <label class="form-label" for="cmbCargo">Cargo</label>
                                        <select class="form-control" id="cmbCargo" name="cmbCargo" data-toggle="select2" data-width="100%" data-validation="[V>0]" data-validation-message="Seleccione Cargo"></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-1">
                                    <div class="form-group">
                                        <label class="form-label" for="optActivo">Activo</label>

                                        <select class="form-select" id="optActivo" name="optActivo">
                                            @if (Model.Activo == true)
                                            {
                                                <option value="1" selected="">Si</option>
                                                <option value="0">No</option>
                                            }
                                            else
                                            {
                                                <option value="1">Si</option>
                                                <option value="0" selected="">No</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div hidden class="col-md-2">
                                <div class="mb-1">
                                    <div class="form-group">
                                        <label class="form-label" for="optDestinoTodos">DestinoTodos</label>

                                        <select class="form-select" id="optDestinoTodos" name="optDestinoTodos">
                                            @if (Model.DestinoTodos == true)
                                            {
                                                <option value="1" selected="">Si</option>
                                                <option value="0">No</option>
                                            }
                                            else
                                            {
                                                <option value="1">Si</option>
                                                <option value="0" selected="">No</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer" style="text-align:end;">
                        <button class="btn btn-primary waves-effect waves-light" title="Nuevo registro" onclick="VerEditarEmpleadoPerfil(0)"> Nuevo <i class="ti-file"></i></button>
                        <button type="submit" class="btn btn-success waves-effect waves-light" title="Grabar registro"> Guardar <i class="ti-save"></i></button>
                        <button class="btn btn-danger waves-effect waves-light" title="Regresar al formulario anterior" onclick="CerrarModalEmpleadoPerfil()"> Regresar <i class="ti-back-left"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <script>

        function ListarComboEmpresaSede() {
            $("#cmbEmpresaSede").empty();
            $("#cmbEmpresaSede").append("<option value=0>Seleccione</option>");
            $.ajax({
                url: "@Url.Action("ListarComboEmpresaSede", "EmpresaSede")",
                method: 'POST',
                async: false,
                success: function (data) {

                    $.each(data, function (i, item) {
                        if (item.IdEmpresaSede == "@Model.empresasede.IdEmpresaSede") {
                            $("#cmbEmpresaSede").append("<option value=" + item.IdEmpresaSede + " selected='selected'>" + item.NombreEmpresaSede + "</option>");
                        }
                        else {
                            $("#cmbEmpresaSede").append("<option value=" + item.IdEmpresaSede + ">" + item.NombreEmpresaSede + "</option>");
                        }
                    });
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la llamada ListarComboEmpresaSede, verifique consola');
                }
            });
        }

        function ListarComboArea() {
            $("#cmbArea").empty();
            $("#cmbArea").append("<option value=0>Seleccione</option>");
            var IdEmpresaSede = 0;
            IdEmpresaSede = $('#cmbEmpresaSede').val() == null ? 0 : $('#cmbEmpresaSede').val();
            $.ajax({
                url: "@Url.Action("ListarComboArea", "Area")",
                method: 'POST',
                async: false,
                data: { IdEmpresaSede: IdEmpresaSede },
                success: function (data) {
                    $.each(data.lista, function (i, item) {
                        if (item.IdArea == "@Model.area.IdArea") {
                            $("#cmbArea").append("<option value=" + item.IdArea + " selected='selected'>" + item.NombreArea + "</option>");
                        }
                        else {
                            $("#cmbArea").append("<option value=" + item.IdArea + ">" + item.NombreArea + "</option>");
                        }
                    });
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [ListarComboArea], verifique consola');
                }
            });
        }

        function ListarComboCargo() {
            $.ajax({
                url: "@Url.Action("ListarComboCargo", "Cargo")",
                method: 'POST',
                success: function (data) {
                    $("#cmbCargo").empty();
                    $("#cmbCargo").append("<option value=0>Seleccione</option>");
                    $.each(data, function (i, item) {
                        if (item.IdCargo == "@Model.cargo.IdCargo") {
                            $("#cmbCargo").append("<option value=" + item.IdCargo + " selected='selected'>" + item.NombreCargo + "</option>");
                        }
                        else {
                            $("#cmbCargo").append("<option value=" + item.IdCargo + ">" + item.NombreCargo + "</option>");
                        }
                    });
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [ListarComboCargo], verifique consola');
                },
                complete: function (respuesta) {
                    ValidarSesionActual(respuesta);
                }
            });
        }

        $(function () {
            ListarComboEmpresaSede();
            ListarComboCargo();
            ListarComboArea();
            $('#cmbEmpresaSede').select2({ dropdownParent: $('#ModalEmpleadoPerfil') }).on("select2:select", function (e) {
                const selectedData = e.params.data;
                if(selectedData.id){
                    $("#frmRegistroEmpleadoPerfil").removeError("cmbEmpresaSede")
                }                
            });
            $('#cmbEmpresaSede').change(function () { ListarComboArea(); });


            $('#cmbCargo').select2({ dropdownParent: $('#ModalEmpleadoPerfil') }).on("select2:select", function (e) {
                const selectedData = e.params.data;
                if (selectedData.id) {
                    $("#frmRegistroEmpleadoPerfil").removeError("cmbCargo")
                }
            });;
            $('#cmbArea').select2({ dropdownParent: $('#ModalEmpleadoPerfil') }).on("select2:select", function (e) {
                const selectedData = e.params.data;
                if (selectedData.id) {
                    $("#frmRegistroEmpleadoPerfil").removeError("cmbArea")
                }
            });;
            $("#frmRegistroEmpleadoPerfil").validate({
                submit: {
                    settings: {
                        inputContainer: '.field',
                        errorClass: 'LabelError', errorListClass: 'ListaError'
                    },
                    callback: {
                        onBeforeSubmit: function (node) {
                        },
                        onSubmit: function (node, formData) {
                            //var files = $("#txtRutaArchivo").get(0).files;
                            var fileData = new FormData();
                            for (var control in formData) {
                                var valor = $("#" + control).val();
                                fileData.append(control, valor);
                                valor = "";
                            }
                            //fileData.append('Archivo', files[0]);

                            fileData.append('IdEmpleado', '@Model.empleado.IdEmpleado');

                            $.ajax({
                                url: "@Url.Action("GuardarRegistroEmpleadoPerfil", "EmpleadoPerfil")",
                                method: 'POST',
                                data: fileData,
                                contentType: false,
                                processData: false,
                                success: function (empleadoperfil) {
                                    if (empleadoperfil.mensaje.CodigoMensaje == 0) {
                                        toastr.success(empleadoperfil.mensaje.DescripcionMensaje);
                                        ActualizarTablaEmpleadoPerfil();
                                    }
                                    else {
                                        toastr.error(empleadoperfil.mensaje.DescripcionMensaje);
                                        console.log(empleadoperfil.mensaje.DescripcionMensajeSistema);
                                    }
                                },
                                error: function (mensaje) {
                                    console.log(mensaje);
                                    toastr.error('Sucedió un error en la interface [GuardarRegistroEmpleadoPerfil], verifique consola');
                                },
                                complete: function (respuesta) {
                                    ValidarSesionActual(respuesta);
                                }
                            });
                        }
                    }
                }
            });
        });
    </script>

}


