@using Microsoft.AspNetCore.Http @{

    Layout = "~/Views/Shared/Inicial.cshtml";
    Context.Session.SetString("ModuloActual", "Seguridad");
    Context.Session.SetString("PaginaActual", "Usuario");
    Context.Session.SetString("SubPaginaActual", "");
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item">@Context.Session.GetString("ModuloActual")</li>
                        <li class="breadcrumb-item active">@Context.Session.GetString("PaginaActual")</li>
                    </ol>
                </div>
                <h4 class="page-title">@Context.Session.GetString("PaginaActual")</h4>
            </div>
        </div>
    </div>
</div>
@if (ViewBag.conpermiso == 0)
{
    <div style="font-weight:bold;color:red;">Usted no tiene permiso para ver este recurso</div>
}
else
{
    <form id="frmRegistroPersona" name="frmRegistroPersona" method="POST">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Datos Personales</h5>
                <div class="row mb-2">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" for="cmbCatalogoTipoPersona">Tipo Persona</label>
                            <select class="form-control" id="cmbCatalogoTipoPersona" name="cmbCatalogoTipoPersona" data-validation="[V>0]" data-validation-message="Seleccione el Tipo Persona"></select>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" for="cmbCatalogoTipoDocumentoPersonal">Tipo de documento</label>
                            <select class="form-control" id="cmbCatalogoTipoDocumentoPersonal" name="cmbCatalogoTipoDocumentoPersonal"></select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" for="txtNumeroDocumento">N° de documento</label>
                            <div class="input-group">

                                @*      <span class="input-group-addon" style="cursor:pointer;background:#B21817;color:white;border-radius: 0 0.2rem 0.2rem 0;" title="Buscar datos personales solo por DNI y RUC" onclick="BuscarPersona()">Buscar <i id="ibtnBuscarPersona" class="fa fa-search"> </i></span>*@
                                <div class="input-group input-group-merge">
                                    <input type="text" autocomplete="off" class="form-control" style="border-radius: 0.2rem 0 0 0.2rem;" name="txtNumeroDocumento" id="txtNumeroDocumento" data-validation="[L>=1]" placeholder="N° documento" data-validation-message="Ingrese el numero de documento">
                                    @* <input type="password" id="password" class="form-control" placeholder="Enter your password">*@
                                    <div title="Buscar datos personales solo por DNI y RUC" onclick="BuscarPersona()" class="input-group-text btn btn-primary">
                                        <span class="fas fa-search"></span>
                                    </div>
                                </div>

                                <div></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" for="txtNombreCompleto">Nombre Completo</label>
                            <input disabled type="text" class="form-control" name="txtNombreCompleto" id="txtNombreCompleto" data-validation="[L>=1]" data-validation-message="Ingrese el Nombre Completo">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label" for="txtNombres">Nombres</label>
                            <input type="text" class="form-control" name="txtNombres" id="txtNombres">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label" for="txtApellidoPaterno">Apellido Paterno</label>
                            <input type="text" class="form-control" name="txtApellidoPaterno" id="txtApellidoPaterno">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label" for="txtApellidoMaterno">Apellido Materno</label>
                            <input type="text" class="form-control" name="txtApellidoMaterno" id="txtApellidoMaterno">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label" for="optSexo">Sexo</label>
                            <br />
                            <select id="optSexo" name="optSexo" class="form-control form-select">
                                <option value="0">MASCULINO</option>
                                <option value="1">FEMENINO</option>
                            </select>
                        </div>
                    </div>
                </div>
                <h5 style="margin-top:10px;" class="card-title">Datos Laborales</h5>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label" for="cmbEmpresaSede">Empresa / Sede</label>
                            <select class="form-control" id="cmbEmpresaSede" name="cmbEmpresaSede"></select>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label" for="cmbArea">Area</label>
                            <select class="form-control " id="cmbArea" name="cmbArea"></select>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label" for="cmbCargo">Cargo</label>
                            <select class="form-control" id="cmbCargo" name="cmbCargo"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label" for="cmbCatalogoTipoEmpleado">Tipo</label>
                            <select class="form-control" id="cmbCatalogoTipoEmpleado" name="cmbCatalogoTipoEmpleado" data-validation="[V>0]" data-validation-message="Seleccione el Tipo"></select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer" style="text-align:end;">
                <button type="button" data-toggle="tooltip" class="btn btn-success waves-effect waves-light" title="Nueva Persona" onclick="LimpiarCamposPersona()"> Nuevo &nbsp;<i class="ti-file"></i></button>
                <button type="button" data-toggle="tooltip" class="btn btn-primary waves-effect waves-light" title="Guardar Persona" onclick="GuardarPersonaEnUsuario()"> Guardar &nbsp;<i id="btnGUardarPersona" class="ti-save"></i></button>

            </div>
        </div>
    </form>
    <div id="divEditarUsuario">
    </div>

    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="form-label" for="optBloqueadoBusqueda">Bloqueado</label>
                        <select id="optBloqueadoBusqueda" name="optBloqueadoBusqueda" class="form-control form-select">
                            <option value="2">Todos</option>
                            <option value="1">Si</option>
                            <option value="0">No</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="form-label" for="optEsInstitucionBusqueda">Es Institución</label>
                        <br />
                        <select id="optEsInstitucionBusqueda" name="optEsInstitucionBusqueda" class="form-control form-select">
                            <option value="2">Todos</option>
                            <option value="1">Si</option>
                            <option value="0">No</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <table id="dtbUsuario" class="table table-striped table-hover table-bordered" cellspacing="0" style="width:100%"></table>
        </div>
    </div>
    <div class="modal fade" id="ModalUsuarioPerfil" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-se modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Perfiles de sistema</h5>
                    <a class="close" onclick="CerrarModalUsuarioPerfil()"><i class="fas fa-times"></i></a>
                </div>
                <div class="modal-body">
                    <div class="card" style="box-shadow:none">
                        <div class="card-body">
                            <div id="divModalUsuarioPerfil"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ModalUsuarioToken" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-sme modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Token API</h5>
                    <a class="close" onclick="CerrarModalUsuarioToken()"><i class="fas fa-times"></i></a>
                </div>
                <div class="modal-body">
                    <div id="divModalUsuarioToken">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="ModalEliminarUsuario" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
        <input type="hidden" class="form-control" name="txtIdUsuarioEliminar" id="txtIdUsuarioEliminar" value="">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Eliminar Usuario</h4>
                    <a class="close" onclick="CerrarEliminarUsuario()"><i class="fas fa-times"></i></a>
                </div>
                <div class="modal-body">
                    ¿Está seguro de eliminar el registro seleccionado?
                </div>
                <div class="modal-footer">
                    <button type="button" data-toggle="tooltip" class="btn btn-danger label" title="Eliminar registro seleccionado" onclick="EliminarUsuario()"> Eliminar <i class="ti-trash"></i></button>
                    <button type="button" data-toggle="tooltip" class="btn btn-warning label" title="Regresar al formulario anterior" onclick="CerrarEliminarUsuario()"> Cerrar <i class="ti-back-left"></i></button>
                </div>
            </div>
        </div>
    </div>

    @section scripts {
    <script>
        function CerrarEliminarUsuario() {
            $("#ModalEliminarUsuario").modal("hide");
        }
        function EliminarUsuario() {
            var IdUsuario = $('#txtIdUsuarioEliminar').val();
            $.ajax({
                url: "@Url.Action("EliminarUsuario")",
                method: 'POST',
                data: { IdUsuario: IdUsuario },
                success: function (mensaje) {
                    $("#modalEliminarUsuario").modal('hide');
                    if (mensaje.CodigoMensaje == 0) {
                        toastr.success(mensaje.DescripcionMensaje);
                        ActualizarTablaUsuario();
                        VerEditarUsuario(0);
                        CerrarEliminarUsuario();
                    }
                    else {
                        toastr.error(mensaje.DescripcionMensaje);
                        console.log(mensaje.DescripcionMensajeSistema);
                    }
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [EliminarUsuario], verifique consola');
                },
                complete: function (respuesta) {
                    ValidarSesionActual(respuesta);
                }
            });
        }
        function VerModalEliminarUsuario(IdUsuario) {
            $('#txtIdUsuarioEliminar').val(IdUsuario);
            $("#ModalEliminarUsuario").modal("show");
        }
        function CerrarModalUsuarioToken() {
            $("#ModalUsuarioToken").modal("hide");
            $("#divModalUsuarioToken").empty();
            ActualizarTablaUsuarioToken();
        }
        function VerModalUsuarioToken(IdUsuario) {
            if (IdUsuario == 0) {
                toastr.error('Seleccione correctamente un UsuarioToken');
                return;
            }
            $.ajax({
                url: "@Url.Action("IndexUsuarioToken", "UsuarioToken")",
                type: "POST",
                async: true,
                data: { IdUsuario: IdUsuario },
                success: function (vistaParcial) {
                    $("#divModalUsuarioToken").html(vistaParcial);
                    $("#ModalUsuarioToken").modal("show");
                },
                error: function (mensaje) {
                    console.log(mensaje.responseText);
                    toastr.error('Sucedió un error en la llamada, verifique consola');
                },
                complete: function (respuesta) {
                    $('#iBtnVerModalUsuarioToken').removeClass("fa fa-spinner fa-spin fa-fw").addClass("icon-menu");
                    ValidarSesionActual(respuesta);
                }
            });
        }
        function ListarCatalogoTipoEmpleado() {
            $.ajax({
                url: "@Url.Action("ListarCatalogoTipoEmpleado", "CatalogoRecursoHumano")",
                method: 'POST',
                success: function (data) {
                    $("#cmbCatalogoTipoEmpleado").empty();
                    $.each(data, function (i, item) {
                        $("#cmbCatalogoTipoEmpleado").append("<option value=" + item.IdCatalogo + ">" + item.Descripcion + "</option>");
                    });
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [ListarCatalogoTipoEmpleado], verifique consola');
                },
                complete: function (respuesta) {
                    ValidarSesionActual(respuesta);
                }
            });
        }

        function BuscarPersona() {
            $('#txtNumeroDocumento').focus();
            var TipoDocumentoPersona = $('#cmbCatalogoTipoDocumentoPersonal').val();

            var NumeroDocumento = $('#txtNumeroDocumento').val();
            if (TipoDocumentoPersona == 0) {
                toastr.error('Seleccione un tipo de documento');
                return 0;
            }
            if (NumeroDocumento == "") {
                toastr.error('Escriba el numero de documento');
                return 0;
            }
            if (TipoDocumentoPersona == 14) {
                if (NumeroDocumento.length != 11) {
                    toastr.error('Ha elegido el tipo de Documento RUC, la cantidad de digitos debe ser 11');
                    return 0;
                }
            }
            if (TipoDocumentoPersona == 2) {
                if (NumeroDocumento.length != 8) {
                    toastr.error('Ha leegido el tipo de documento DNI, la cantidad de digitos debe ser 8');
                    return 0;
                }
            }

            $.ajax({
                beforeSend: function () {
                    $('#ibtnBuscarPersona').removeClass("fa fa-search").addClass("fa fa-spinner fa-spin fa-fw");
                },
                async: true,
                url: "@Url.Action("ObtenerPersonaPorDocumento", "Usuario")",
                method: 'POST',
                data: { NumeroDocumento: NumeroDocumento, TipoDocumentoPersona: TipoDocumentoPersona },
                success: function (persona) {
                    $('#txtNombres').val(persona.Nombres);
                    $('#txtApellidoPaterno').val(persona.ApellidoPaterno);
                    $('#txtApellidoMaterno').val(persona.ApellidoMaterno);
                    $('#txtFechaNacimiento').val(persona.FechaNacimiento);
                    $('#txtLugarNacimiento').val(persona.LugarNacimiento);
                    $('#optSexo').val(persona.IdGenero);
                    $('#txtTipoPersona').val(persona.catalogotipopersona.Descripcion);

                    $("#cmbPais").val(145);
                    $("#cmbCatalogoTipoPersona").val(9);
                    $("#txtIdPersona").val(persona.IdPersona);
                    if (persona.mensaje.CodigoMensaje != 0) {
                        toastr.error(persona.mensaje.DescripcionMensaje);
                    }
                    if (persona.Nombres != null) {
                        $("#btnGuardarMovimientoPersonaEntrada").focus();
                    }
                    $('#ibtnBuscarPersona').removeClass("fa fa-spinner fa-spin fa-fw").addClass("fa fa-search");
                },
                error: function (mensaje) {
                    toastr.error(mensaje);
                    $('#ibtnBuscarPersona').removeClass("fa fa-spinner fa-spin fa-fw").addClass("fa fa-search");
                },
                complete: function (respuesta) {
                    $('#ibtnBuscarPersona').removeClass("fa fa-spinner fa-spin fa-fw").addClass("fa fa-search");
                }
            });
        }
        function ListarComboEmpresaSede() {
            $.ajax({
                url: "@Url.Action("ListarComboEmpresaSede", "EmpresaSede")",
                method: 'POST',
                async: false,
                success: function (data) {
                    $("#cmbEmpresaSede").empty();
                    $.each(data, function (i, item) {
                        $("#cmbEmpresaSede").append("<option value=" + item.IdEmpresaSede + ">" + item.NombreEmpresaSede + "</option>");
                    });
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la llamada ListarComboEmpresaSede, verifique consola');
                },
                complete: function (respuesta) {
                    ValidarSesionActual(respuesta);
                }
            });
        }
        function ListarComboArea() {
            var IdEmpresa = 0;
            IdEmpresaSede = $('#cmbEmpresaSede').val() == null ? 0 : $('#cmbEmpresaSede').val();
            $.ajax({
                url: "@Url.Action("ListarComboArea", "Area")",
                method: 'POST',
                data: { IdEmpresaSede: IdEmpresaSede },
                success: function (data) {
                    $("#cmbArea").empty();
                    $("#cmbArea").append("<option value=0>Seleccione</option>");

                    $.each(data.lista, function (i, item) {

                        $("#cmbArea").append("<option value=" + item.IdArea + ">" + item.NombreArea + "</option>");
                    });
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [ListarComboArea], verifique consola');
                }
            });
        }
        function ListarCatalogoTipoPersona() {
            $.ajax({
                url: "@Url.Action("ListarCatalogoTipoPersona", "CatalogoGeneral")",
                method: 'POST',
                success: function (data) {
                    $("#cmbCatalogoTipoPersona").empty();
                    $.each(data, function (i, item) {
                        $("#cmbCatalogoTipoPersona").append("<option value=" + item.IdCatalogo + ">" + item.Descripcion + "</option>");

                    });
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [ListarCatalogoTipoPersona], verifique consola');
                },
                complete: function (respuesta) {
                    ValidarSesionActual(respuesta);
                }
            });
        }

        function ListarComboCargo() {
            $.ajax({
                url: "@Url.Action("ListarComboCargo", "Cargo")",
                method: 'POST',
                success: function (data) {
                    $("#cmbCargo").empty();
                    $("#cmbCargo").append("<option value=0>Seleccione</option>");
                    $.each(data, function (i, item) {
                        $("#cmbCargo").append("<option value=" + item.IdCargo + ">" + item.NombreCargo + "</option>");
                    });
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [ListarComboCargo], verifique consola');
                },
                complete: function (respuesta) {
                    ValidarSesionActual(respuesta);
                }
            });
        }
        function GuardarPersonaEnUsuario() {
            var IdUsuario = $("#txtRegIdUsuario").val()
            if (IdUsuario > 0) {
                VerEditarUsuario(0);
            }
            var frm = $("#frmRegistroPersona")[0];
            var fileData = new FormData(frm);

            $.ajax({
                beforeSend: function () {
                    $('#btnGUardarPersona').removeClass("ti-save").addClass("fa fa-spinner fa-spin fa-fw");
                },
                url: "@Url.Action("GuardarPersonaEnUsuario", "Persona")",
                method: 'POST',
                data: fileData,
                contentType: false,
                processData: false,
                success: function (persona) {
                    if (persona.mensaje.CodigoMensaje == 0) {
                        $("#txtIdPersona").val(persona.IdPersona);
                        $("#txtPersona").val(persona.NombreCompleto);
                        $("#txtLogueo").val('');
                        $("#txtEmail").val('');
                        $("#txtRegIdUsuario").val(0);
                        LimpiarCamposPersona();
                        $("#txtEmail").focus();
                    }
                    else {
                        toastr.error(persona.mensaje.DescripcionMensaje);
                        console.log(persona.mensaje.DescripcionMensajeSistema);
                    }
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [ListarCatalogoTipoDocumentoPersonal], verifique consola');
                },
                complete: function (respuesta) {
                    $('#btnGUardarPersona').removeClass("fa fa-spinner fa-spin fa-fw").addClass("ti-save");
                }
            });
        }
        function LimpiarCamposPersona() {
            $("#cmbArea").val(0);
            $("#cmbCargo").val(0);
            $("#txtNombres").val('');
            $("#txtApellidoPaterno").val('');
            $("#txtApellidoMaterno").val('');
            $("#cmbCatalogoTipoDocumentoPersonal").val(2);
            $("#cmbArea").val(0);
            $("#cmbCargo").val(0);
            $("#txtNumeroDocumento").val('');
            $("#optSexo").val(0);
            $('#txtNumeroDocumento').focus();
            $('#cmbCatalogoTipoDocumentoPersonal').change();
            $('#cmbArea').change();
            $('#cmbCargo').change();
        }
        function ListarCatalogoTipoDocumentoPersonal() {
            $.ajax({
                url: "@Url.Action("ListarCatalogoTipoDocumentoPersonal", "CatalogoGeneral")",
                method: 'POST',
                success: function (data) {
                    $("#cmbCatalogoTipoDocumentoPersonal").empty();
                    $.each(data, function (i, item) {
                        $("#cmbCatalogoTipoDocumentoPersonal").append("<option value=" + item.IdCatalogo + ">" + item.Descripcion + "</option>");
                    });
                    $("#cmbCatalogoTipoDocumentoPersonal").val(2);
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la interface [ListarCatalogoTipoDocumentoPersonal], verifique consola');
                }
            });
        }
        function EnviarCredenciales(IdUsuario) {
            $.ajax({
                beforeSend: function () {
                    $('#btnEnviar' + IdUsuario).removeClass("ti-email").addClass("fa fa-spinner fa-spin fa-fw");
                },
                url: "@Url.Action("EnviarUsuarioPasswordPorEmail", "Usuario")",
                type: "POST",
                data: { IdUsuario: IdUsuario },
                success: function (mensaje) {
                    if (mensaje.CodigoMensaje == 0) {
                        toastr.success(mensaje.DescripcionMensaje);
                    }
                    else {
                        console.log(mensaje.DescripcionMensajeSistema);
                        toastr.error(mensaje.DescripcionMensaje);
                    }
                },
                error: function (mensaje, error, thrown) {
                    console.log(mensaje.responseText);
                },
                complete: function (respuesta) {
                    $('#btnEnviar' + IdUsuario).removeClass("fa fa-spinner fa-spin fa-fw").addClass("ti-email");
                }
            });
        }
        function CerrarModalUsuarioPerfil() {
            $("#ModalUsuarioPerfil").modal("hide");
            $("#divModalUsuarioPerfil").empty();
            ActualizarTablaUsuario();
        }

        function VerModalUsuarioPerfil(IdUsuario) {
            $.ajax({
                url: "@Url.Action("IndexUsuarioPerfil", "UsuarioPerfil")",
                type: "GET",
                data: { IdUsuario: IdUsuario },
                success: function (vistaParcial) {
                    $("#divModalUsuarioPerfil").html(vistaParcial);
                    $("#ModalUsuarioPerfil").modal("show");
                },
                error: function (mensaje) {
                    console.log(mensaje.responseText);
                    toastr.error('Sucedió un error en la llamada, verifique consola');
                }
            });
        }

        function VerEditarUsuario(tipo) {
            var IdUsuario = 0;
            if (tipo == 1) {
                var data = ListaUsuario.dtUsuario.rows('.selected').data();
                if (data.length == 1) {
                    IdUsuario = data[0].IdUsuario;
                }
            }
            $.ajax({
                beforeSend: function () {
                    $('#iBtnNuevoIdUsuario').removeClass("ti-file").addClass("fa fa-spinner fa-spin fa-fw");
                },
                url: "@Url.Action("RegistroUsuario", "Usuario")",
                type: "POST",
                async: true,
                data: { IdUsuario: IdUsuario },
                success: function (vistaParcial) {
                    $("#divEditarUsuario").html(vistaParcial);
                },
                error: function (mensaje) {
                    console.log(mensaje);
                    toastr.error('Sucedió un error en la llamada, verifique consola');
                },
                complete: function (respuesta) {
                    $('#iBtnNuevoIdUsuario').removeClass("fa fa-spinner fa-spin fa-fw").addClass("ti-file");
                }
            });
        }
        function ActualizarTablaUsuario() {
            ListaUsuario.refresh();
        }
        $(function () {


            $("#optEsInstitucionBusqueda").change(function () {
                ActualizarTablaUsuario();
            });
            $("#optBloqueadoBusqueda").change(function () {
                ActualizarTablaUsuario();
            });
            $("#cmbCatalogoTipoPersona").change(function () {
                if ($("#cmbCatalogoTipoPersona").val() == "9") {
                    $("#txtNombreCompleto").prop("disabled", true);
                    $("#txtNombres").prop("disabled", false);
                    $("#txtApellidoPaterno").prop("disabled", false);
                    $("#txtApellidoMaterno").prop("disabled", false);
                    $("#cmbCatalogoTipoDocumentoPersonal").val(2);
                }
                else {
                    $("#txtNombreCompleto").prop("disabled", false);
                    $("#txtNombres").prop("disabled", true);
                    $("#txtApellidoPaterno").prop("disabled", true);
                    $("#txtApellidoMaterno").prop("disabled", true);
                    $("#cmbCatalogoTipoDocumentoPersonal").val(14);
                }
                $('#cmbCatalogoTipoDocumentoPersonal').change();
                $('#txtNumeroDocumento').focus();

            });

            VerEditarUsuario(0);
            ListarCatalogoTipoPersona();
            ListarCatalogoTipoDocumentoPersonal();
            $('#cmbCatalogoTipoDocumentoPersonal').select2();
            $('#cmbCatalogoTipoPersona').select2();
            $('#cmbArea').select2();
            $('#cmbEmpresaSede').select2();
            $('#cmbCargo').select2();
            $('#cmbCatalogoTipoEmpleado').select2();
            $('#cmbEmpresaSede').change(function () { ListarComboArea(); });
            ListarComboCargo();
            ListarComboEmpresaSede();
            ListarComboArea();
            ListarCatalogoTipoEmpleado();

            $('#txtNumeroDocumento').focus();

            ListaUsuario = {
                dtUsuario: null,
                init: function () {
                    this.dtUsuario = $('#dtbUsuario').DataTable({
                        responsive: true,
                        rowId: 'IdUsuario',
                        language: {
                            url: '/assets/libs/datatables.net/js/es-ES.json',
                        },
                        "ordering": false,
                        //initComplete: function () {
                        //    this.api().row({ order: 'current' }, 0).select();//selecciona la rimera fila
                        //},
                        "lengthMenu": [[10, 25, 50, 100, 100000], [10, 25, 50, 100, 'Todo']],
                        select: {
                            style: 'single',
                            info: false
                        },
                        "serverSide": true,
                        "ajax": {
                            "url": "@Url.Action("ListarUsuario", "Usuario")",
                            "type": "POST",
                            "data": function (d) {
                                d.optEsInstitucionBusqueda = $('#optEsInstitucionBusqueda').val();
                                d.optBloqueadoBusqueda = $('#optBloqueadoBusqueda').val();
                            }
                        },
                        "columns": [
                            { "title": "Tipo", "data": "CatalogoTipoUsuario", "className": "dt-head-center dt-body-center", "width": "13%" },
                            { "title": "Nombre completo del usuario", "data": "Persona", "className": "dt-head-center dt-body-left", "width": "30%" },
                            { "title": "Email", "data": "Email", "className": "dt-head-center dt-body-center", "width": "13%" },
                            { "title": "Login", "data": "Logueo", "className": "dt-head-center dt-body-center", "width": "13%" },
                            { "title": "Bloqueado", "data": "Bloqueado", "className": "dt-head-center dt-body-center", "width": "11%" },
                            { "title": "Es institución", "data": "EsInstitucion", "className": "dt-head-center dt-body-center", "width": "11%" },
                            {
                                "title": "Perfiles",
                                "data": function (row, type, val, meta) {
                                    if (row.IdCatalogoTipoUsuario == 4) {
                                        var CantidadPerfil = '';

                                        return '<button  type="button" data-toggle="tooltip" class="btn btn-primary waves-effect waves-light" title="ver Perfil" onclick="VerModalUsuarioPerfil(' + row.IdUsuario + ')" ><i class="fas fa-address-card"> ' + row.CantidadPerfil + '</i></button>';
                                    }
                                    return '';
                                },
                                "width": "5%", "className": "dt-head-center dt-body-center"
                            },
                            //{
                            //    "title": "Enviar <br>credencial",
                            //    "data": function (row, type, val, meta) {
                            //        if (row.IdCatalogoTipoUsuario == 3 || row.IdCatalogoTipoUsuario == 4) {
                            //            if (!row.Block && row.Logueo != "ADMIN") {
                            //                return '<button style="height:32px;width:32px;"  type="button" data-toggle="tooltip" class="ui green label" title="Enviar credenciales al usuario" onclick="EnviarCredenciales(' + row.IdUsuario + ')"><i  id="btnEnviar' + row.IdUsuario + '" class="fa fa-share-square"></i></button>';
                            //            }
                            //            else {
                            //                return "";
                            //            }
                            //        }
                            //        return '';
                            //    },
                            //    "width": "5%", "className": "dt-head-center dt-body-center"
                            //},
                            //{
                            //    "title": "Token API",
                            //    "data": function (row, type, val, meta) {
                            //            var CantidadToken = '';
                            //            if (row.CantidadToken > 0) { CantidadToken = '<span class="badge headerBadgeColor2">' + row.CantidadToken + '</span>'; }
                            //            return '<button  style="height:32px;width:32px;"  type="button" data-toggle="tooltip" class="btn-warning label" title="ver Token" onclick="VerModalUsuarioToken(' + row.IdUsuario + ')" ><i  id="btnUsuarioToken' + row.IdUsuario + '" class="fas fa-bars"></i></button> ' + CantidadToken;
                            //     },
                            //    "width": "5%", "className": "dt-head-center dt-body-center"
                            //},
                            {
                                "title": "Eliminar",
                                "data": function (row, type, val, meta) {
                                    return '<button type="button" data-toggle="tooltip" class="btn btn-danger label" title="Opciones" onclick="VerModalEliminarUsuario(' + row.IdUsuario + ')"><i id="btnUsuario' + row.IdUsuario + '" class="fa fa-trash"></i></button>';
                                },
                                "className": "dt-head-center dt-body-center", "width": "5%"
                            }
                        ]
                    });
                },
                refresh: function () {
                    this.dtUsuario.ajax.reload(null, false);
                }

            }

            ListaUsuario.init();
            ListaUsuario.dtUsuario.on('select', function (e, dt, type, indexes) {
                var count = ListaUsuario.dtUsuario.rows({ selected: true }).count();
                if (count > 0) {
                    VerEditarUsuario(1);
                }
            });
        });
    </script>
    }
}







