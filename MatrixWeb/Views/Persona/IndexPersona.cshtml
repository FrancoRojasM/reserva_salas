@using Microsoft.AspNetCore.Http
@{
    Layout = "~/Views/Shared/Inicial.cshtml";
    Context.Session.SetString("ModuloActual", "General");
    Context.Session.SetString("PaginaActual", "Persona");
    Context.Session.SetString("SubPaginaActual", "");
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="page-title-box">
                    <div class="page-title-right">
                        <ol class="breadcrumb m-0">
                            <li class="breadcrumb-item">@Context.Session.GetString("ModuloActual")</li>
                            <li class="breadcrumb-item active">@Context.Session.GetString("PaginaActual")</li>
                        </ol>
                    </div>
                    <h4 class="page-title">@Context.Session.GetString("PaginaActual")</h4>
                </div>
            </div>
        </div>
    </div>
    @if (ViewBag.conpermiso == 0)
    {
        <div style="font-weight:bold;color:red;">Usted no tiene permiso para ver este recurso</div>
    }
    else
    {
        <div class="card border-info border mb-3">
            <div class="card-body px-1 py-1">
                <div id="divEditarPersona">
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <table id="dtbPersona" class="table table-striped table-hover table-bordered" cellspacing="0" style="width:100%"></table>
                    </div>
                </div>
            </div>
        </div>





        <div class="modal fade" id="ModalEliminarPersona" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
            <input type="hidden" class="form-control" name="txtIdPersonaEliminar" id="txtIdPersonaEliminar" value="">
            <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Eliminar Persona</h5>
                        <a class="close" onclick="CerrarEliminarPersona()"><i class="fas fa-times"></i></a>
                    </div>
                    <div class="modal-body">
                        ¿Está seguro de eliminar el registro seleccionado?
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-toggle="tooltip" class="btn btn-danger label" title="Eliminar registro seleccionado" onclick="EliminarPersona()"> Eliminar <i class="ti-trash"></i></button>
                        <button type="button" data-toggle="tooltip" class="btn btn-warning label" title="Regresar al formulario anterior" onclick="CerrarEliminarPersona()"> Cerrar <i class="ti-back-left"></i></button>
                    </div>
                </div>
            </div>
        </div>
        @section scripts {
        <script>
            function CerrarEliminarPersona() {
                $("#txtIdPersonaEliminar").val(0);
                $("#ModalEliminarPersona").modal("hide");
            }
            function EliminarPersona() {
                var IdPersonaEliminar = $('#txtIdPersonaEliminar').val();
                $.ajax({
                    beforeSend: function () {
                        $('#btnNuevoPersona').prop('disabled', true);
                        $('#btnGrabarPersona').prop('disabled', true);
                        $('#btnVerModalEliminarPersona').prop('disabled', true);
                    },
                    url: "@Url.Action("EliminarPersona")",
                    method: 'POST',
                    data: { IdPersona: IdPersonaEliminar },
                    success: function (mensaje) {
                        $("#modalEliminarPersona").modal('hide');
                        if (mensaje.CodigoMensaje == 0) {
                            $("#" + IdPersonaEliminar).remove();
                            $('#btnVerEditarPersona').prop('disabled', true);
                            $('#btnVerModalEliminarPersona').prop('disabled', true);
                            toastr.success(mensaje.DescripcionMensaje);
                            VerEditarPersona(0);
                            CerrarEliminarPersona();
                        }
                        else {
                            toastr.error(mensaje.DescripcionMensaje);
                            console.log(mensaje.DescripcionMensajeSistema);
                        }
                    },
                    error: function (mensaje) {
                        console.log(mensaje);
                        toastr.error('Sucedió un error en la interface [EliminarPersona], verifique consola');
                    },
                    complete: function (respuesta) {
                        $('#btnNuevoPersona').prop('disabled', false);
                        $('#btnGrabarPersona').prop('disabled', false);
                        $('#btnVerModalEliminarPersona').prop('disabled', false);
                        ValidarSesionActual(respuesta);
                    }
                });
            }
            function VerModalEliminarPersona(IdPersona) {
                $("#txtIdPersonaEliminar").val(IdPersona);
                $("#ModalEliminarPersona").modal("show");
            }

            function VerEditarPersona(tipo) {
                var IdPersona = 0;
                if (tipo == 1) {
                    var data = ListaPersona.dtPersona.rows('.selected').data();
                    if (data.length == 1) {
                        IdPersona = data[0].IdPersona;
                    }
                }
                $.ajax({
                    beforeSend: function () {
                        $('#iBtnNuevoIdPersona').removeClass("ti-file").addClass("fa fa-spinner fa-spin fa-fw");
                    },
                    url: "@Url.Action("RegistroPersona", "Persona")",
                    type: "POST",
                    async: true,
                    data: { IdPersona: IdPersona },
                    success: function (vistaParcial) {
                        $("#divEditarPersona").html(vistaParcial);
                    },
                    error: function (mensaje) {
                        console.log(mensaje);
                        toastr.error('Sucedió un error en la llamada, verifique consola');
                    },
                    complete: function (respuesta) {
                        $('#iBtnNuevoIdPersona').removeClass("fa fa-spinner fa-spin fa-fw").addClass("ti-file");
                        ValidarSesionActual(respuesta);
                    }
                });
            }

            function ActualizarTablaPersona() {
                ListaPersona.refresh();
            }
            $(function () {
                VerEditarPersona(0);
                ListaPersona = {
                    dtPersona: null,
                    init: function () {
                        this.dtPersona = $('#dtbPersona').DataTable({
                            responsive: true,
                            rowId: 'IdPersona',
                            language: {
                                url: '/assets/libs/datatables.net/js/es-ES.json',
                            },
                            "ordering": false,
                            "lengthMenu": [[10, 25, 50, 100, 100000], [10, 25, 50, 100, 'Todo']],
                            select: {
                                style: 'single',
                                info: false
                            },
                            "serverSide": true,
                            "ajax": {
                                "url": "@Url.Action("ListarPersona", "Persona")",
                                "error": function (respuesta, error, thrown) {
                                    ValidarSesionActual(respuesta);
                                },
                                "type": "POST"
                                //"data": function (d) {
                                //    d.extra_search = $('#extra').val();
                                //}
                            },
                            "columns": [
                                { "title": "Tipo Persona", "data": "CatalogoTipoPersona", "className": "dt-head-center dt-body-left", "width": "10%" },
                                { "title": "Nombre", "data": "NombreCompleto", "className": "dt-head-center dt-body-left", "width": "20%" },
                                { "title": "Tipo Documento", "data": "CatalogoTipoDocumentoPersonal", "className": "dt-head-center dt-body-left", "width": "10%" },
                                { "title": "N° Documento", "data": "NumeroDocumento", "className": "dt-head-center dt-body-left", "width": "10%" },
                                { "title": "Departamento", "data": "Departamento", "className": "dt-head-center dt-body-left", "width": "10%" },
                                { "title": "Provincia", "data": "Provincia", "className": "dt-head-center dt-body-left", "width": "10%" },
                                { "title": "Distrito", "data": "Distrito", "className": "dt-head-center dt-body-left", "width": "10%" },
                                { "title": "Direccion", "data": "Direccion", "className": "dt-head-center dt-body-left", "width": "10%" },
                                { "title": "Celular", "data": "Celular", "className": "dt-head-center dt-body-left", "width": "10%" },
                                {
                                    "title": "Eliminar",
                                    "data": function (row, type, val, meta) {
                                        return '<button type="button" data-toggle="tooltip" class="btn btn-danger waves-effect waves-light" title="Opciones" onclick="VerModalEliminarPersona(' + row.IdPersona + ')"><i id="btnPersona' + row.IdPersona + '" class="fa fa-trash"></i></button>';
                                    },
                                    "className": "dt-head-center dt-body-center", "width": "5%"
                                }
                            ]
                        });
                    },
                    refresh: function () {
                        this.dtPersona.ajax.reload(null, false);
                    }
                }
                ListaPersona.init();
                ListaPersona.dtPersona.on('select', function (e, dt, type, indexes) {
                    var count = ListaPersona.dtPersona.rows({ selected: true }).count();
                    if (count > 0) {
                        VerEditarPersona(1);
                    }
                });
            });
        </script>

        }
    }

}